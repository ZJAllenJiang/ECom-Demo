server:
  port: 8080

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/ecommerce
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: ${SHOW_SQL:false}
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 25
        order_inserts: true
        order_updates: true

  jms:
    listener:
      auto-startup: true
      acknowledge-mode: auto
      concurrency: 1
      max-concurrency: 10

  elasticsearch:
    host: ${ELASTICSEARCH_HOST:localhost}
    port: ${ELASTICSEARCH_PORT:9200}

  jackson:
    serialization:
      write-dates-as-timestamps: false
    default-property-inclusion: non_null

activemq:
  broker-url: ${ACTIVEMQ_BROKER_URL:tcp://localhost:61616}
  user: ${ACTIVEMQ_USER:admin}
  password: ${ACTIVEMQ_PASSWORD:admin}

stripe:
  secret-key: ${STRIPE_SECRET_KEY:sk_test_your_secret_key}
  publishable-key: ${STRIPE_PUBLISHABLE_KEY:pk_test_your_publishable_key}
  webhook-secret: ${STRIPE_WEBHOOK_SECRET:}

elasticsearch:
  host: ${ELASTICSEARCH_HOST:localhost}
  port: ${ELASTICSEARCH_PORT:9200}

logging:
  level:
    com.ecommerce: ${LOG_LEVEL:INFO}
    org.springframework.jms: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.web: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/ecommerce.log

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,env
  endpoint:
    health:
      show-details: always